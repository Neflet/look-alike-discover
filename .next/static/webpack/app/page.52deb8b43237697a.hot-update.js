"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/search-image.ts":
/*!*****************************!*\
  !*** ./lib/search-image.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   embedImage: function() { return /* binding */ embedImage; },\n/* harmony export */   searchSimilar: function() { return /* binding */ searchSimilar; },\n/* harmony export */   supabase: function() { return /* binding */ supabase; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n// lib/search-image.ts\n\nconst SUPABASE_URL = \"https://veikyjfcycgpkpwdbksa.supabase.co\";\nconst SUPABASE_ANON_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InZlaWt5amZjeWNncGtwd2Ria3NhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTQwMjA0OTAsImV4cCI6MjA2OTU5NjQ5MH0.xPFTAJVSpVS4hcbnzmILDItpSphcP2aKTPSFo1VbB2s\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_0__.createClient)(SUPABASE_URL, SUPABASE_ANON_KEY);\nfunction assertEmbedding(e, model) {\n    if (!Array.isArray(e) || e.length !== 1152) {\n        console.error(\"[embed] bad shape\", {\n            len: e === null || e === void 0 ? void 0 : e.length,\n            model\n        });\n        throw new Error(\"Embedding must be length 1152\");\n    }\n}\nasync function embedImage(file) {\n    // Try local encoder server first (for development)\n    const LOCAL_ENCODER = \"http://localhost:8001/embed\";\n    try {\n        console.log(\"[EMBED-FN] trying local encoder at\", LOCAL_ENCODER);\n        const fd = new FormData();\n        fd.append(\"file\", file);\n        const res = await fetch(LOCAL_ENCODER, {\n            method: \"POST\",\n            body: fd\n        });\n        if (res.ok) {\n            const data = await res.json();\n            const embedding = data.embedding || data.vector;\n            const dim = data.dims || data.dim || (embedding === null || embedding === void 0 ? void 0 : embedding.length);\n            const model = data.model || \"google/siglip-so400m-patch14-384\";\n            assertEmbedding(embedding, model);\n            if (dim !== 1152) throw new Error(\"Unexpected dim \".concat(dim));\n            console.log(\"[EMBED-FN] local encoder ok\", {\n                len: embedding.length,\n                model\n            });\n            return {\n                embedding,\n                dim,\n                model\n            };\n        }\n    } catch (localErr) {\n        console.log(\"[EMBED-FN] local encoder failed, trying edge function:\", localErr);\n    }\n    // Fallback to Supabase edge function\n    const fd = new FormData();\n    fd.append(\"file\", file);\n    console.log(\"[EMBED-FN] invoking embed-image edge functionâ€¦\");\n    const { data, error } = await supabase.functions.invoke(\"embed-image\", {\n        body: fd\n    });\n    if (error) throw error;\n    const { embedding, dim, model } = data;\n    assertEmbedding(embedding, model);\n    if (dim !== 1152) throw new Error(\"Unexpected dim \".concat(dim));\n    console.log(\"[EMBED-FN] ok\", {\n        len: embedding.length,\n        model\n    });\n    return data;\n}\nasync function searchSimilar(embedding, model) {\n    let opts = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};\n    assertEmbedding(embedding, model);\n    var _opts_topK;\n    const top_k = (_opts_topK = opts.topK) !== null && _opts_topK !== void 0 ? _opts_topK : 24;\n    var _opts_minSimilarity;\n    const minSimilarity = (_opts_minSimilarity = opts.minSimilarity) !== null && _opts_minSimilarity !== void 0 ? _opts_minSimilarity : 0.55;\n    // Call the **vector overload** (qvec: vector(1152))\n    console.log(\"[RPC] calling search_products\", {\n        top_k,\n        model\n    });\n    // Use the explicitly named function to avoid overload resolution issues\n    const { data, error } = await supabase.rpc(\"search_products_siglip\", {\n        qvec: embedding,\n        p_model_id: model,\n        top_k\n    });\n    if (error) {\n        console.error(\"[RPC] error\", error);\n        throw error;\n    }\n    const rows = (data !== null && data !== void 0 ? data : [])// keep if RPC returns similarity column; otherwise passthrough\n    .filter((r)=>typeof r.similarity === \"number\" ? r.similarity >= minSimilarity : true);\n    console.log(\"[RPC] results\", rows.length);\n    return rows;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zZWFyY2gtaW1hZ2UudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHNCQUFzQjtBQUMrQjtBQXNCckQsTUFBTUMsZUFBZUMsMENBQW9DO0FBQ3pELE1BQU1HLG9CQUFvQkgsa05BQXlDO0FBRTVELE1BQU1LLFdBQVdQLG1FQUFZQSxDQUFDQyxjQUFjSSxtQkFBbUI7QUFFdEUsU0FBU0csZ0JBQWdCQyxDQUFXLEVBQUVDLEtBQWE7SUFDakQsSUFBSSxDQUFDQyxNQUFNQyxPQUFPLENBQUNILE1BQU1BLEVBQUVJLE1BQU0sS0FBSyxNQUFNO1FBQzFDQyxRQUFRQyxLQUFLLENBQUMscUJBQXFCO1lBQUVDLEdBQUcsRUFBRVAsY0FBQUEsd0JBQUFBLEVBQUdJLE1BQU07WUFBRUg7UUFBTTtRQUMzRCxNQUFNLElBQUlPLE1BQU07SUFDbEI7QUFDRjtBQUVPLGVBQWVDLFdBQVdDLElBQVU7SUFDekMsbURBQW1EO0lBQ25ELE1BQU1DLGdCQUFnQjtJQUV0QixJQUFJO1FBQ0ZOLFFBQVFPLEdBQUcsQ0FBQyxzQ0FBc0NEO1FBQ2xELE1BQU1FLEtBQUssSUFBSUM7UUFDZkQsR0FBR0UsTUFBTSxDQUFDLFFBQVFMO1FBRWxCLE1BQU1NLE1BQU0sTUFBTUMsTUFBTU4sZUFBZTtZQUNyQ08sUUFBUTtZQUNSQyxNQUFNTjtRQUNSO1FBRUEsSUFBSUcsSUFBSUksRUFBRSxFQUFFO1lBQ1YsTUFBTUMsT0FBTyxNQUFNTCxJQUFJTSxJQUFJO1lBQzNCLE1BQU1DLFlBQVlGLEtBQUtFLFNBQVMsSUFBSUYsS0FBS0csTUFBTTtZQUMvQyxNQUFNQyxNQUFNSixLQUFLSyxJQUFJLElBQUlMLEtBQUtJLEdBQUcsS0FBSUYsc0JBQUFBLGdDQUFBQSxVQUFXbkIsTUFBTTtZQUN0RCxNQUFNSCxRQUFRb0IsS0FBS3BCLEtBQUssSUFBSTtZQUU1QkYsZ0JBQWdCd0IsV0FBV3RCO1lBQzNCLElBQUl3QixRQUFRLE1BQU0sTUFBTSxJQUFJakIsTUFBTSxrQkFBc0IsT0FBSmlCO1lBRXBEcEIsUUFBUU8sR0FBRyxDQUFDLCtCQUErQjtnQkFBRUwsS0FBS2dCLFVBQVVuQixNQUFNO2dCQUFFSDtZQUFNO1lBQzFFLE9BQU87Z0JBQUVzQjtnQkFBV0U7Z0JBQUt4QjtZQUFNO1FBQ2pDO0lBQ0YsRUFBRSxPQUFPMEIsVUFBVTtRQUNqQnRCLFFBQVFPLEdBQUcsQ0FBQywwREFBMERlO0lBQ3hFO0lBRUEscUNBQXFDO0lBQ3JDLE1BQU1kLEtBQUssSUFBSUM7SUFDZkQsR0FBR0UsTUFBTSxDQUFDLFFBQVFMO0lBRWxCTCxRQUFRTyxHQUFHLENBQUM7SUFDWixNQUFNLEVBQUVTLElBQUksRUFBRWYsS0FBSyxFQUFFLEdBQUcsTUFBTVIsU0FBUzhCLFNBQVMsQ0FBQ0MsTUFBTSxDQUFnQixlQUFlO1FBQ3BGVixNQUFNTjtJQUNSO0lBQ0EsSUFBSVAsT0FBTyxNQUFNQTtJQUVqQixNQUFNLEVBQUVpQixTQUFTLEVBQUVFLEdBQUcsRUFBRXhCLEtBQUssRUFBRSxHQUFHb0I7SUFDbEN0QixnQkFBZ0J3QixXQUFXdEI7SUFDM0IsSUFBSXdCLFFBQVEsTUFBTSxNQUFNLElBQUlqQixNQUFNLGtCQUFzQixPQUFKaUI7SUFFcERwQixRQUFRTyxHQUFHLENBQUMsaUJBQWlCO1FBQUVMLEtBQUtnQixVQUFVbkIsTUFBTTtRQUFFSDtJQUFNO0lBQzVELE9BQU9vQjtBQUNUO0FBT08sZUFBZVMsY0FDcEJQLFNBQW1CLEVBQ25CdEIsS0FBYTtRQUNiOEIsT0FBQUEsaUVBQXNCLENBQUM7SUFFdkJoQyxnQkFBZ0J3QixXQUFXdEI7UUFFYjhCO0lBQWQsTUFBTUMsUUFBUUQsQ0FBQUEsYUFBQUEsS0FBS0UsSUFBSSxjQUFURix3QkFBQUEsYUFBYTtRQUNMQTtJQUF0QixNQUFNRyxnQkFBZ0JILENBQUFBLHNCQUFBQSxLQUFLRyxhQUFhLGNBQWxCSCxpQ0FBQUEsc0JBQXNCO0lBRTVDLG9EQUFvRDtJQUNwRDFCLFFBQVFPLEdBQUcsQ0FBQyxpQ0FBaUM7UUFBRW9CO1FBQU8vQjtJQUFNO0lBRTVELHdFQUF3RTtJQUN4RSxNQUFNLEVBQUVvQixJQUFJLEVBQUVmLEtBQUssRUFBRSxHQUFHLE1BQU1SLFNBQVNxQyxHQUFHLENBQUMsMEJBQTBCO1FBQ25FQyxNQUFNYjtRQUNOYyxZQUFZcEM7UUFDWitCO0lBQ0Y7SUFFQSxJQUFJMUIsT0FBTztRQUNURCxRQUFRQyxLQUFLLENBQUMsZUFBZUE7UUFDN0IsTUFBTUE7SUFDUjtJQUVBLE1BQU1nQyxPQUFPLENBQUNqQixpQkFBQUEsa0JBQUFBLE9BQVEsRUFBRSxDQUN0QiwrREFBK0Q7S0FDOURrQixNQUFNLENBQUNDLENBQUFBLElBQU0sT0FBT0EsRUFBRUMsVUFBVSxLQUFLLFdBQVdELEVBQUVDLFVBQVUsSUFBSVAsZ0JBQWdCO0lBRW5GN0IsUUFBUU8sR0FBRyxDQUFDLGlCQUFpQjBCLEtBQUtsQyxNQUFNO0lBQ3hDLE9BQU9rQztBQUNUIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2xpYi9zZWFyY2gtaW1hZ2UudHM/N2FmYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBsaWIvc2VhcmNoLWltYWdlLnRzXG5pbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnO1xuXG50eXBlIEVtYmVkUmVzcG9uc2UgPSB7XG4gIGVtYmVkZGluZzogbnVtYmVyW107XG4gIGRpbTogbnVtYmVyO1xuICBtb2RlbDogc3RyaW5nOyAvLyBlLmcuLCAnZ29vZ2xlL3NpZ2xpcC1zbzQwMG0tcGF0Y2gxNC0zODQnXG59O1xuXG5leHBvcnQgdHlwZSBTZWFyY2hIaXQgPSB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHByaWNlPzogbnVtYmVyO1xuICBjdXJyZW5jeT86IHN0cmluZztcbiAgY2F0ZWdvcnk/OiBzdHJpbmc7XG4gIGJyYW5kPzogc3RyaW5nO1xuICBjb2xvcj86IHN0cmluZztcbiAgdXJsPzogc3RyaW5nO1xuICBtYWluX2ltYWdlX3VybD86IHN0cmluZztcbiAgc2ltaWxhcml0eT86IG51bWJlcjsgICAgIC8vIGV4cG9zZWQgYnkgUlBDICgxLjAgPSBpZGVudGljYWwsIDAuMCA9IGNvbXBsZXRlbHkgZGlmZmVyZW50KVxuICBjb3NfZGlzdGFuY2U/OiBudW1iZXI7ICAgLy8gZXhwb3NlZCBieSBSUEMgKDAuMCA9IGlkZW50aWNhbCwgMS4wID0gY29tcGxldGVseSBkaWZmZXJlbnQpXG59O1xuXG5jb25zdCBTVVBBQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkwhO1xuY29uc3QgU1VQQUJBU0VfQU5PTl9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSE7XG5cbmV4cG9ydCBjb25zdCBzdXBhYmFzZSA9IGNyZWF0ZUNsaWVudChTVVBBQkFTRV9VUkwsIFNVUEFCQVNFX0FOT05fS0VZKTtcblxuZnVuY3Rpb24gYXNzZXJ0RW1iZWRkaW5nKGU6IG51bWJlcltdLCBtb2RlbDogc3RyaW5nKSB7XG4gIGlmICghQXJyYXkuaXNBcnJheShlKSB8fCBlLmxlbmd0aCAhPT0gMTE1Mikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ1tlbWJlZF0gYmFkIHNoYXBlJywgeyBsZW46IGU/Lmxlbmd0aCwgbW9kZWwgfSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKCdFbWJlZGRpbmcgbXVzdCBiZSBsZW5ndGggMTE1MicpO1xuICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBlbWJlZEltYWdlKGZpbGU6IEZpbGUpOiBQcm9taXNlPEVtYmVkUmVzcG9uc2U+IHtcbiAgLy8gVHJ5IGxvY2FsIGVuY29kZXIgc2VydmVyIGZpcnN0IChmb3IgZGV2ZWxvcG1lbnQpXG4gIGNvbnN0IExPQ0FMX0VOQ09ERVIgPSAnaHR0cDovL2xvY2FsaG9zdDo4MDAxL2VtYmVkJztcbiAgXG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coJ1tFTUJFRC1GTl0gdHJ5aW5nIGxvY2FsIGVuY29kZXIgYXQnLCBMT0NBTF9FTkNPREVSKTtcbiAgICBjb25zdCBmZCA9IG5ldyBGb3JtRGF0YSgpO1xuICAgIGZkLmFwcGVuZCgnZmlsZScsIGZpbGUpO1xuICAgIFxuICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKExPQ0FMX0VOQ09ERVIsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgYm9keTogZmQsXG4gICAgfSk7XG4gICAgXG4gICAgaWYgKHJlcy5vaykge1xuICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcy5qc29uKCk7XG4gICAgICBjb25zdCBlbWJlZGRpbmcgPSBkYXRhLmVtYmVkZGluZyB8fCBkYXRhLnZlY3RvcjtcbiAgICAgIGNvbnN0IGRpbSA9IGRhdGEuZGltcyB8fCBkYXRhLmRpbSB8fCBlbWJlZGRpbmc/Lmxlbmd0aDtcbiAgICAgIGNvbnN0IG1vZGVsID0gZGF0YS5tb2RlbCB8fCAnZ29vZ2xlL3NpZ2xpcC1zbzQwMG0tcGF0Y2gxNC0zODQnO1xuICAgICAgXG4gICAgICBhc3NlcnRFbWJlZGRpbmcoZW1iZWRkaW5nLCBtb2RlbCk7XG4gICAgICBpZiAoZGltICE9PSAxMTUyKSB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgZGltICR7ZGltfWApO1xuICAgICAgXG4gICAgICBjb25zb2xlLmxvZygnW0VNQkVELUZOXSBsb2NhbCBlbmNvZGVyIG9rJywgeyBsZW46IGVtYmVkZGluZy5sZW5ndGgsIG1vZGVsIH0pO1xuICAgICAgcmV0dXJuIHsgZW1iZWRkaW5nLCBkaW0sIG1vZGVsIH07XG4gICAgfVxuICB9IGNhdGNoIChsb2NhbEVycikge1xuICAgIGNvbnNvbGUubG9nKCdbRU1CRUQtRk5dIGxvY2FsIGVuY29kZXIgZmFpbGVkLCB0cnlpbmcgZWRnZSBmdW5jdGlvbjonLCBsb2NhbEVycik7XG4gIH1cbiAgXG4gIC8vIEZhbGxiYWNrIHRvIFN1cGFiYXNlIGVkZ2UgZnVuY3Rpb25cbiAgY29uc3QgZmQgPSBuZXcgRm9ybURhdGEoKTtcbiAgZmQuYXBwZW5kKCdmaWxlJywgZmlsZSk7XG5cbiAgY29uc29sZS5sb2coJ1tFTUJFRC1GTl0gaW52b2tpbmcgZW1iZWQtaW1hZ2UgZWRnZSBmdW5jdGlvbuKApicpO1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5mdW5jdGlvbnMuaW52b2tlPEVtYmVkUmVzcG9uc2U+KCdlbWJlZC1pbWFnZScsIHtcbiAgICBib2R5OiBmZCxcbiAgfSk7XG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG5cbiAgY29uc3QgeyBlbWJlZGRpbmcsIGRpbSwgbW9kZWwgfSA9IGRhdGEhO1xuICBhc3NlcnRFbWJlZGRpbmcoZW1iZWRkaW5nLCBtb2RlbCk7XG4gIGlmIChkaW0gIT09IDExNTIpIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBkaW0gJHtkaW19YCk7XG5cbiAgY29uc29sZS5sb2coJ1tFTUJFRC1GTl0gb2snLCB7IGxlbjogZW1iZWRkaW5nLmxlbmd0aCwgbW9kZWwgfSk7XG4gIHJldHVybiBkYXRhITtcbn1cblxuZXhwb3J0IHR5cGUgU2VhcmNoT3B0aW9ucyA9IHtcbiAgdG9wSz86IG51bWJlcjsgICAgICAgICAgIC8vIGRlZmF1bHQgMjRcbiAgbWluU2ltaWxhcml0eT86IG51bWJlcjsgIC8vIGRlZmF1bHQgMC41NVxufTtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHNlYXJjaFNpbWlsYXIoXG4gIGVtYmVkZGluZzogbnVtYmVyW10sXG4gIG1vZGVsOiBzdHJpbmcsXG4gIG9wdHM6IFNlYXJjaE9wdGlvbnMgPSB7fVxuKTogUHJvbWlzZTxTZWFyY2hIaXRbXT4ge1xuICBhc3NlcnRFbWJlZGRpbmcoZW1iZWRkaW5nLCBtb2RlbCk7XG5cbiAgY29uc3QgdG9wX2sgPSBvcHRzLnRvcEsgPz8gMjQ7XG4gIGNvbnN0IG1pblNpbWlsYXJpdHkgPSBvcHRzLm1pblNpbWlsYXJpdHkgPz8gMC41NTtcblxuICAvLyBDYWxsIHRoZSAqKnZlY3RvciBvdmVybG9hZCoqIChxdmVjOiB2ZWN0b3IoMTE1MikpXG4gIGNvbnNvbGUubG9nKCdbUlBDXSBjYWxsaW5nIHNlYXJjaF9wcm9kdWN0cycsIHsgdG9wX2ssIG1vZGVsIH0pO1xuXG4gIC8vIFVzZSB0aGUgZXhwbGljaXRseSBuYW1lZCBmdW5jdGlvbiB0byBhdm9pZCBvdmVybG9hZCByZXNvbHV0aW9uIGlzc3Vlc1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ3NlYXJjaF9wcm9kdWN0c19zaWdsaXAnLCB7XG4gICAgcXZlYzogZW1iZWRkaW5nLCAvLyBzdXBhYmFzZS1qcyB3aWxsIHNlcmlhbGl6ZSB0aGUgYXJyYXk7IERCIGZ1bmN0aW9uIGFjY2VwdHMgdmVjdG9yKDExNTIpXG4gICAgcF9tb2RlbF9pZDogbW9kZWwsXG4gICAgdG9wX2ssXG4gIH0pIGFzIHsgZGF0YTogU2VhcmNoSGl0W10gfCBudWxsOyBlcnJvcjogYW55IH07XG5cbiAgaWYgKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignW1JQQ10gZXJyb3InLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cblxuICBjb25zdCByb3dzID0gKGRhdGEgPz8gW10pXG4gICAgLy8ga2VlcCBpZiBSUEMgcmV0dXJucyBzaW1pbGFyaXR5IGNvbHVtbjsgb3RoZXJ3aXNlIHBhc3N0aHJvdWdoXG4gICAgLmZpbHRlcihyID0+ICh0eXBlb2Ygci5zaW1pbGFyaXR5ID09PSAnbnVtYmVyJyA/IHIuc2ltaWxhcml0eSA+PSBtaW5TaW1pbGFyaXR5IDogdHJ1ZSkpO1xuXG4gIGNvbnNvbGUubG9nKCdbUlBDXSByZXN1bHRzJywgcm93cy5sZW5ndGgpO1xuICByZXR1cm4gcm93cztcbn1cbiJdLCJuYW1lcyI6WyJjcmVhdGVDbGllbnQiLCJTVVBBQkFTRV9VUkwiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwiU1VQQUJBU0VfQU5PTl9LRVkiLCJORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSIsInN1cGFiYXNlIiwiYXNzZXJ0RW1iZWRkaW5nIiwiZSIsIm1vZGVsIiwiQXJyYXkiLCJpc0FycmF5IiwibGVuZ3RoIiwiY29uc29sZSIsImVycm9yIiwibGVuIiwiRXJyb3IiLCJlbWJlZEltYWdlIiwiZmlsZSIsIkxPQ0FMX0VOQ09ERVIiLCJsb2ciLCJmZCIsIkZvcm1EYXRhIiwiYXBwZW5kIiwicmVzIiwiZmV0Y2giLCJtZXRob2QiLCJib2R5Iiwib2siLCJkYXRhIiwianNvbiIsImVtYmVkZGluZyIsInZlY3RvciIsImRpbSIsImRpbXMiLCJsb2NhbEVyciIsImZ1bmN0aW9ucyIsImludm9rZSIsInNlYXJjaFNpbWlsYXIiLCJvcHRzIiwidG9wX2siLCJ0b3BLIiwibWluU2ltaWxhcml0eSIsInJwYyIsInF2ZWMiLCJwX21vZGVsX2lkIiwicm93cyIsImZpbHRlciIsInIiLCJzaW1pbGFyaXR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/search-image.ts\n"));

/***/ })

});